<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.example.lavrastore.dao.mybatis.mapper.PTPItemMapper">
	<cache />
	
	<select id="getPItem" parameterType="HashMap" resultType="PTPItem">
		select
		i.itemid as "item.itemid",
		i.productId as "item.productid",
		i.image as "item.image",
		i.description as "item.description",
		i.title as "item.title",
		i.price as "item.price",
		i.likecnt as "item.likecnt",
		p.itemid as "PTPItemId",
		p.state,
		p.devP,
		p.sellerId,
		p.bank,
		p.account
		from item i inner join PTPItem p on i.itemid = p.itemid
		where i.itemid = to_number(#{itemId})
		and p.sellerId = #{sellerId}
	</select>
	
	<select id="getPItem2" parameterType="int" resultType="PTPItem">
		select
		i.itemid as "item.itemid",
		i.productId as "item.productid",
		i.image as "item.image",
		i.description as "item.description",
		i.title as "item.title",
		i.price as "item.price",
		i.likecnt as "item.likecnt",
		p.itemid as "PTPItemId",
		p.state,
		p.devP,
		p.sellerId,
		p.bank,
		p.account
		from item i inner join PTPItem p on i.itemid = p.itemid
		where i.itemid = to_number(#{itemId})
	</select>
	
	<select id="getPItemListByProduct" resultType="PTPItem">
		select
		i.itemid as "item.itemid",
		i.productId as "item.productid",
		i.image as "item.image",
		i.description as "item.description",
		i.title as "item.title",
		i.price as "item.price",
		i.likecnt as "item.likecnt",
		p.itemid,
		p.state,
		p.devP,
		p.sellerId,
		p.bank,
		p.account
		from item i, PTPItem p
		where i.itemid = p.itemid
		and i.productId = #{productId}
	</select>
	
	<select id="getPItemListByMemberAndProduct" parameterType="HashMap" resultType="PTPItem">
		select
		i.itemid as "item.itemid",
		i.productId as "item.productid",
		i.image as "item.image",
		i.description as "item.description",
		i.title as "item.title",
		i.price as "item.price",
		i.likecnt as "item.likecnt",
		i.quantity as "item.quantity", 
        NVL(w.wishlistId, 0) as "item.isInWishlist",
        p.itemid,
		p.state,
		p.devP,
		p.sellerId,
		p.bank,
		p.account
		from item i, PTPItem p, wishlist w
		where i.itemid = p.itemid
		and i.productId = to_number(#{productId})
		and i.itemid = w.itemid(+)
		and w.memberid(+) = #{memberId}
	</select>
	
	<select id = "getPItemListByHighPrice" resultType="PTPItem">
		select
		i.itemid as "item.itemid",
		i.productId as "item.productid",
		i.image as "item.image",
		i.description as "item.description",
		i.title as "item.title",
		i.price as "item.price",
		i.likecnt as "item.likecnt"
		p.state,
		p.devP,
		p.sellerId,
		p.bank,
		p.account
		from item i inner join PTPItem p on i.itemid = p.itemid
		where i.itemid = #{itemId}
		order by i.price DESC
	</select>
	
	<select id = "getPItemListByLowPrice" resultType="PTPITEM">
		select
		i.itemid as "item.itemid",
		i.productId as "item.productid",
		i.image as "item.image",
		i.description as "item.description",
		i.title as "item.title",
		i.price as "item.price",
		i.likecnt as "item.likecnt"
		p.state,
		p.devP,
		p.sellerId,
		p.bank,
		p.account
		from item i inner join PTPItem p on i.itemid = p.itemid
		where i.itemid = #{itemId}
		order by i.price ASC
	</select>
	
	<update id="updateState" parameterType="int">
		update PTPItem set state= 2
		where itemId = #{PTPItemId}
	</update>
	
	<insert id="insertPItem" parameterType="PTPItem">
		insert into PTPItem ( PTPITEMID, ITEMID, STATE, SELLERID, DEVP, BANK, ACCOUNT)
		VALUES (#{PTPItemId}, #{PTPItemId}, #{state}, #{sellerId}, #{devP}, #{bank}, #{account})
	</insert>
	
	<update id="updatePItem" parameterType="PTPItem">
		update PTPItem set state = #{state}, sellerId = #{sellerId},
		devP = #{devP}, bank = #{bank}, account = #{account}
		where itemId = #{PTPItemId}
	</update>
	
	<delete id="deletePItem" parameterType="int">
		delete from ptpItem where itemId = #{PTPItemId}
	</delete>
	

</mapper>