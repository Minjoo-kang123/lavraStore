<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.lavrastore.dao.mybatis.mapper.OrderMapper">
	
	<insert id="insertOrder" parameterType="Order">
		insert into shopOrder (ORDERID, ORDERDATE, SHIPADDR1, SHIPADDR2, SHIPZIP, TOTALPRICE, SHIPNAME,
		MEMBERID, CATEGORYID)
    	VALUES(#{orderId}, #{orderDate}, #{shipAddr1}, #{shipAddr2}, #{shipZip}, #{totalPrice}, 
      #{shipname}, #{memberId}, #{categoryId})
	</insert>
	
	<insert id="insertPayment" parameterType="Order">
		<selectKey keyProperty="paymentId" resultType="int" order="BEFORE">
    		select SEQ_paymentid.nextval FROM DUAL
  		</selectKey>
 		insert into payment (paymentid, orderid , paytype)
  		values (#{paymentId}, #{orderId}, #{payType})
	</insert>
	
	<insert id="insertCreditCard" parameterType="Order">
		<selectKey keyProperty="paymentId" resultType="int" order="BEFORE">
    		select SEQ_paymentId.currval FROM DUAL
  		</selectKey>
 		insert into creditcard (paymentId, CARDTYPE, CARDNUM, EXPIRYDATE)
  		values (#{paymentId}, #{cardType}, #{cardNum}, #{expiryDate})
	</insert>
	
	<insert id="insertGroupOrder" parameterType="GroupOrder">
		insert into grouporder (orderId, itemId, status, quantity)
		values (#{orderId}, #{itemId}, #{status}, #{quantity})
	</insert>
	
	<update id="updateGroupOrderStatus">
		UPDATE groupOrder
    	SET status = (
        	select distinct i.status from groupItem i, groupOrder o
        	where i.itemid = o.itemid
    	)
	</update>
	
 
	 <!-- 쇼핑몰 item의 order 조회 -->
	<select id="getItemOrderListByMember" parameterType="String" resultType="Order">
		select
		o.orderId,
		o.orderDate,
		o.shipAddr1,
		o.shipAddr2,
		o.shipZip,
		o.totalPrice,
		o.shipname,
		o.memberId,
		o.categoryId,
		p.payType,
        p.cardType,
        p.cardNum
		from shoporder o,
        (select p.orderid, p.paytype, c.cardtype, c.cardnum from payment p, creditcard c
        where p.paymentid = c.paymentid(+)) p
		where o.memberId = #{memberId} and
        o.orderId = p.orderId and
		o.categoryId = 1
		ORDER BY o.orderDate desc
	</select>
	
	<!-- 개인거래 item의 order 조회 -->
	<select id="getPTPOrderListByMember" parameterType="String" resultType="Order">
		select
		o.orderId,
		o.orderDate,
		o.shipAddr1,
		o.shipAddr2,
		o.shipZip,
		o.totalPrice,
		o.shipname,
		o.memberId,
		o.categoryId,
		p.payType,
        p.cardType,
        p.cardNum
		from shoporder o,
        (select p.orderid, p.paytype, c.cardtype, c.cardnum from payment p, creditcard c
        where p.paymentid = c.paymentid(+)) p
		where o.memberId = #{memberId} and
        o.orderId = p.orderId and
		o.categoryId = 3
		ORDER BY o.orderDate desc
	</select>
	
	<!-- 공동구매 item의 order 조회 -->
	<select id="getGroupOrderListByMember" parameterType="String" resultType="Order">
		select
		o.orderId,
		o.orderDate,
		o.shipAddr1,
		o.shipAddr2,
		o.shipZip,
		o.totalPrice,
		o.shipname,
		o.memberId,
		o.categoryId,
        p.payType,
        p.cardType,
        p.cardNum,
		g.itemId as "groupOrder.itemId",
		g.status as "groupOrder.status"
		from shoporder o, grouporder g,
        (select p.orderid, p.paytype, c.cardtype, c.cardnum from payment p, creditcard c
        where p.paymentid = c.paymentid(+)) p
		where o.orderId = g.orderId and 
        o.orderId = p.orderId and
		o.memberId = #{memberId} and
		o.categoryId = 2 
		ORDER BY o.orderDate desc
	</select>
	
</mapper>